&ACCESS RVP
&REL 1
&COMMENT USER specified PLC program
def ekiCommHandler ( )
   ;Copyright (C) 2020 KUKA Robotics Corporation
   ;fold Disclaimer
      ; This sample code is provided as is and any express or implied warranties, 
      ; including the implied warranties of merchantability and fitness
      ; for a particular purpose are disclaimed. In no event shall KUKA or contributors
      ; be liable for any direct, indirect, incidental, special, exemplary, or consequential
      ; damages (including, but not limited to, procurement of substitute goods or services;
      ; loss of use, data, or profits; or business interruption) sustained by you or a third
      ; party, however caused and on any theory of liability, whether in contract, strict 
      ; liability, or tort arising in any way out of the use of this sample code, even if 
      ; advised of the possibility of such damage.
   ;endfold
   int i, retValue
   decl eki_status ekiRet
   e6pos testPos
   e6axis tempAxis
   frame tempFrame
   real tempArray[12]
   decl state_t stat
   decl modus_t mode
   
   ;run the main program
   cwrite($CMD, stat, mode, "RUN /R1/ekiMain()")
   
   ;reset the data and flags
   clearCommand(cmdData)
   commandAvailable = false
   $flag[ekiReveiveFlagNum] = false
   ekiRet = ConnectToHost(ekiConfigFile[])
   msgNotify("Waiting for Connection")
   loop
      wait for $flag[ekiAliveFlagNum] ; wait for client to connect
      wait for $flag[ekiReveiveFlagNum] ; wait for data to be received
      $flag[ekiReveiveFlagNum] = false
      ; parse the command
      getCommand(ekiConfigFile[], cmdData)
      if isSyncCommand(cmdData.ekiCmd) and commandAvailable then
         ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiBusy[])
      else
         ; execute the command
         switch cmdData.ekiCmd
            ;FOLD NON-SUBMIT COMMANDS         
               case #PTP_TO_JOINT 
                  commandAvailable = true  
                  
               case #PTP_TO_CART
                  commandAvailable = true 
                  
               case #PTP_TO_FRAME
                  commandAvailable = true
                  
               case #SET_TOOL_DATA
                  commandAvailable = true 
                  
               case #SET_BASE_DATA
                  commandAvailable = true
                  
               case #SET_LOAD_DATA
                  commandAvailable = true
                  
               case #SET_JOINT_SPEED
                  commandAvailable = true
                  
               case #SET_CART_SPEED
                  commandAvailable = true
                  
               case #SET_JOINT_ACCEL
                  commandAvailable = true
                  
               case #SET_CART_ACCEL
                  commandAvailable = true
                  
               case #GET_RUNMODE
                  commandAvailable = true
            ;ENDFOLD (NON-SUBMIT COMMANDS)
            ;FOLD (SET COMMANDS)
               case #CLEAR_BUFFER
                  ekiRet = eki_clear(ekiConfigFile[]);
                  commandAvailable = false;
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  
               case #RESET_COMMAND
                  commandAvailable = false;
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  
               case #SET_OVERRIDE
                  if ((cmdData.integerVal >= 0) and (cmdData.integerVal <= 100)) then
                     $ov_pro = cmdData.integerVal
                     wait sec 0
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  else
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                  endif           
                  
               case #SET_JOINT_SPEED
                  if ((cmdData.realVal < 0.0) or (cmdData.realVal > 100.0)) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                  else 
                     for i = 1 to 6
                        $VEL_AXIS[i] = cmdData.realVal
                     endfor
                     $VEL_EXTAX[1] = cmdData.realVal
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  endif
                  
               case #SET_CART_SPEED
                  if ((cmdData.realVal < 0.0) or (cmdData.realVal > $VEL_MA.CP)) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                  else 
                     $VEL.CP = cmdData.realVal
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  endif
                  
               case #SET_JOINT_ACCEL
                  if ((cmdData.realVal < 0.0) or (cmdData.realVal > 100.0)) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                  else 
                     for i = 1 to 6
                        $ACC_AXIS[i] = cmdData.realVal
                     endfor
                     $ACC_EXTAX[1] = cmdData.realVal
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  endif
                  
               case #SET_CART_ACCEL
                  if ((cmdData.realVal < 0.0) or (cmdData.realVal > $ACC_MA.CP)) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                  else 
                     $ACC.CP = cmdData.realVal
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  endif
                  
               case #SET_HOME
                  XHOME = cmdData.jointVal
                  $H_POS=XHOME
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiSuccess[])
                  
            ;ENDFOLD (ST COMMANDS)
            ;FOLD (GET COMMANDS)
               case #GET_ROB_TYPE
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $TRAFONAME[])
                  
               case #GET_ROB_NAME
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $ROBNAME[])
                  
               case #GET_ROB_SN
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $KR_SERIALNO)
                  
               case #GET_BRK_DELAY
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $BRK_DEL)
                  
               case #GET_SW_VERSION
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $RCV_INFO[])
                  
               case #GET_ROBRUNTIME
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $ROBRUNTIME)
                  
               case #GET_ABS_ACCUR
                  switch $ABS_ACCUR
                     case #NONE
                        ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], absAccurNone[])  
                     case #ACTIVE
                        ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], absAccurActive[])
                     case #INACTIVE
                        ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], absAccurInactive[])
                  endswitch
                  
               case #GET_PROG_INFO
                  ekiRet = SendProgramInfo(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[])              
                  
               case #GET_OP_MODE
                  ekiRet = SendOperatingMode(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[])
                  
               case #GET_STOP_MESS
                  if ($STOPMESS) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], boolTrue[])
                  else
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], boolFalse[])
                  endif   
                  
               case #IS_HOME
                  if ($IN_HOME) then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], boolTrue[])
                  else
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], boolFalse[])
                  endif
                  
               case #GET_TOOL_DATA
                  on_error_proceed
                  tempframe = $tool
                  if $err.number > 0 then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                     ERR_CLEAR($ERR)
                  else
                     ekiRet = SendFrame(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempframe) 
                  endif          
                  
               case #GET_BASE_DATA
                  on_error_proceed
                  tempframe = $base
                  if $err.number > 0 then
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[]) ;
                     ERR_CLEAR($ERR)
                  else
                     ekiRet = SendFrame(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempframe) 
                  endif
                  
               case #GET_CURR_OVERRIDE
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $ov_pro) 
                  
               case #GET_NUM_ROB_AXES
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $num_ax)
                  
               case #GET_NUM_EXT_AXES
                  ekiRet = SendInt(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $EX_AX_NUM)
                  
               case #GET_CURR_JOINT
                  ekiRet = SendAxis(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $axis_act) 
                  
               case #GET_LOAD_DATA
                  ekiRet = sendLoadData(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[])
                  
               case #GET_NEG_JOINT_LIM
                  ;array2Axis($softn_end[], tempAxis, 12)
                  ;ekiRet = SendAxis(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempAxis)
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $softn_end[], 12)
                  
               case #GET_POS_JOINT_LIM
                  ;array2Axis($softp_end[], tempAxis, 12)
                  ;ekiRet = SendAxis(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempAxis)
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $softp_end[], 12)
                  
               case #GET_GEAR_RATIOS
                  extractGearRatios(tempArray[], 12)
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempArray[], 12)   
                  
               case #GET_MAX_JOINT_SPEED
                  computeMaxJointSpeed(tempArray[], 12)
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempArray[], 12)
                  
               case #GET_MAX_JOINT_ACCEL
                  computeMaxJointAccel(tempArray[], 12)
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], tempArray[], 12)
               case #GET_CURR_POS
                  on_error_proceed
                  testPos = $pos_act
                  if ($err.number > 0) then ; not valid
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                     ERR_CLEAR($ERR)
                  else
                     ekiRet = SendPose(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], testPos)
                  endif
                  
               case #GET_CURR_POS_IN_WORLD
                  on_error_proceed
                  testPos = $base : $pos_act
                  if ($err.number > 0) then ; not valid
                     ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidValue[])
                     ERR_CLEAR($ERR)
                  else
                     ekiRet = SendPose(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], testPos)
                  endif 
                  
               case #GET_HOME_POS
                  ekiRet = sendAxis(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], XHOME)
                  
               case #GET_MAMES
                  ekiRet = sendRealArray(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $MAMES_ACT[], 12)
                  
               case #GET_MADA_DH
                  ekiRet = sendMadaDh(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[])
                  
               case #GET_ROBROOT
                  ekiRet = sendFrame(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], $robroot_c)
                  
               default
                  ekiRet = SendString(ekiConfigFile[], cmdData.cmdId, cmdData.cmdName[], ekiInvalidCmd[])
         endswitch
      endif
   endloop
end

deffct bool isSyncCommand(cmdType:in)
   decl eki_cmd_type cmdType
   return (cmdType == #PTP_TO_JOINT) or (cmdType == #PTP_TO_CART) or (cmdType == #PTP_TO_FRAME) or (cmdType == #SET_TOOL_DATA) or (cmdType == #SET_BASE_DATA) or (cmdType == #SET_JOINT_SPEED) or  (cmdType == #SET_CART_SPEED) or (cmdType == #SET_JOINT_ACCEL) or (cmdType == #SET_CART_ACCEL)
endfct
